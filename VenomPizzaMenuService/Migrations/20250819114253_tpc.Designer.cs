// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VenomPizzaMenuService.src.context;


#nullable disable

namespace VenomPizzaMenuService.Migrations
{
    [DbContext(typeof(ProductsDbContext))]
    [Migration("20250819114253_tpc")]
    partial class tpc
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ComboProduct", b =>
                {
                    b.Property<int>("ComboId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductsId")
                        .HasColumnType("integer");

                    b.HasKey("ComboId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("ComboProduct");
                });

            modelBuilder.Entity("VenomPizzaMenuService.src.model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Available")
                        .HasColumnType("boolean");

                    b.PrimitiveCollection<List<string>>("Categories")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("VenomPizzaMenuService.src.model.Combo", b =>
                {
                    b.HasBaseType("VenomPizzaMenuService.src.model.Product");

                    b.Property<double>("Profit")
                        .HasColumnType("double precision");

                    b.ToTable("Combos");
                });

            modelBuilder.Entity("VenomPizzaMenuService.src.model.Dish", b =>
                {
                    b.HasBaseType("VenomPizzaMenuService.src.model.Product");

                    b.PrimitiveCollection<List<string>>("Allergens")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<float>("Calorific")
                        .HasColumnType("real");

                    b.Property<float>("Carbohydrates")
                        .HasColumnType("real");

                    b.Property<float>("Fats")
                        .HasColumnType("real");

                    b.PrimitiveCollection<List<string>>("Ingridients")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("PriceVariants")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Proteins")
                        .HasColumnType("real");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("ComboProduct", b =>
                {
                    b.HasOne("VenomPizzaMenuService.src.model.Combo", null)
                        .WithMany()
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VenomPizzaMenuService.src.model.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VenomPizzaMenuService.src.model.Combo", b =>
                {
                    b.HasOne("VenomPizzaMenuService.src.model.Product", null)
                        .WithOne()
                        .HasForeignKey("VenomPizzaMenuService.src.model.Combo", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VenomPizzaMenuService.src.model.Dish", b =>
                {
                    b.HasOne("VenomPizzaMenuService.src.model.Product", null)
                        .WithOne()
                        .HasForeignKey("VenomPizzaMenuService.src.model.Dish", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
